// <auto-generated />
using System;
using CMPT395Project.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CMPT395Project.Migrations
{
    [DbContext(typeof(ProjectContext))]
    partial class ProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CMPT395Project.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.HasKey("AdminId");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("CMPT395Project.Models.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName");

                    b.HasKey("CompanyId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("CMPT395Project.Models.Contract", b =>
                {
                    b.Property<int>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActiveContract")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<int?>("CompanyId");

                    b.Property<int?>("ContractorId");

                    b.Property<decimal>("P1CharRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("P1EndtDate");

                    b.Property<decimal>("P1PayRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("P1StartDate");

                    b.Property<decimal>("P2CharRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("P2EndtDate");

                    b.Property<decimal>("P2PayRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("P2StartDate");

                    b.Property<decimal>("P3CharRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("P3EndtDate");

                    b.Property<decimal>("P3PayRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("P3StartDate");

                    b.Property<decimal>("P4CharRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("P4EndtDate");

                    b.Property<decimal>("P4PayRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("P4StartDate");

                    b.Property<string>("Renewal");

                    b.HasKey("ContractId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ContractorId");

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("CMPT395Project.Models.Contractor", b =>
                {
                    b.Property<int>("ContractorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.HasKey("ContractorId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Contractor");
                });

            modelBuilder.Entity("CMPT395Project.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("CMPT395Project.Models.EmployeeHour", b =>
                {
                    b.Property<int>("TimeSheetId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContractId");

                    b.Property<int>("CurrentMonth");

                    b.Property<int>("Month");

                    b.Property<int>("PreviousMonth");

                    b.Property<int>("Year");

                    b.HasKey("TimeSheetId");

                    b.HasIndex("ContractId");

                    b.ToTable("EmployeeHour");
                });

            modelBuilder.Entity("CMPT395Project.Models.Contract", b =>
                {
                    b.HasOne("CMPT395Project.Models.Company", "Company")
                        .WithMany("Contracts")
                        .HasForeignKey("CompanyId");

                    b.HasOne("CMPT395Project.Models.Contractor", "Contractor")
                        .WithMany("Contracts")
                        .HasForeignKey("ContractorId");
                });

            modelBuilder.Entity("CMPT395Project.Models.Contractor", b =>
                {
                    b.HasOne("CMPT395Project.Models.Company", "Company")
                        .WithMany("Contractors")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("ForeignKey_Contractor_Company")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CMPT395Project.Models.EmployeeHour", b =>
                {
                    b.HasOne("CMPT395Project.Models.Contract", "Contract")
                        .WithMany("EmployeeHours")
                        .HasForeignKey("ContractId")
                        .HasConstraintName("ForeignKey_EmployeeHours_Contract")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
